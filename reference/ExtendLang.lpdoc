The libraries documented in this part extend and modify the Ciao
language in several different ways. The extensions include:
@begin{itemize}
@item restricted languages (@concept{pure Prolog} programming);
@item @concept{constraint logic programming};
@item multi-paradigm features (@concept{higher-order},
  @concept{functional syntax}, @concept{feature terms} or
  @index{records}, @concept{global variables}, @concept{mutable}
  terms, etc.);
@item alternative search and evaluation strategies (@concept{delaying
  predicate execution}, @tt{undo} goals, @concept{breadth-first
  execution}, @concept{iterative deepening-based execution});
@item concurrency and parallel execution (@concept{active modules},
  @concept{parallel programming} (e.g., &-Prolog style)).
@end{itemize}

@comment{@concept{object oriented programming}}
